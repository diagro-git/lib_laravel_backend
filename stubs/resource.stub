<?php
namespace {{ namespace }};

use Diagro\Backend\Http\Resources\DiagroResource;
use Diagro\Backend\Http\Resources\GroupedDefinition;
use Diagro\Backend\Http\Resources\GroupedProperties;
use closure;

class {{ class }} extends DiagroResource
{
    use GroupedProperties;


    /**
     * Transform the resource into an array.
     *
     * @param  \Illuminate\Http\Request  $request
     * @return array
     */
    public function toData($request): array
    {
        return [
            'id' => $this->id,
            'example' => $this->group('example', $this->example),
            'example2' => Example2Collection::subResponse($this->examples), //use this if the Example2Collection has grouped properties.
        ];
    }

    protected function example(): GroupedDefinition
    {
        return new class extends GroupedDefinition {

            public function collector(): closure
            {
                return fn($example_id) => $example_id; //...perform API call with $example_id...
            }

            public function compare(): string|closure
            {
                return 'id'; //the name of the collector field to compare against
            }

        };
    }
}
